step_dummy(all_nominal_predictors())
prepped_recipe = prep(bike_recipe)
bike_train <- vroom("train.csv")
bike_train <- bike_train  |>
select(-casual, -registered)
bike_test <- vroom("test.csv")
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=factor(ifelse(4,3,weather)),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_mutate(hour=factor(hour, levels=0:23),
year=factor(year),
month=factor(month),
dow=factor(dow)) |>
step_rm(datetime) |>
step_corr(all_predictors(), threshold = .8) |>
step_dummy(all_nominal_predictors())
prepped_recipe = prep(bike_recipe)
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=factor(ifelse(4,3,weather)),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_mutate(hour=as.numeric(hour),
year=as.numeric(year),
month=as.numeric(month),
dow=as.numeric(dow)) |>
step_mutate(hour=factor(hour, levels=0:23),
year=factor(year),
month=factor(month),
dow=factor(dow)) |>
step_rm(datetime) |>
step_corr(all_predictors(), threshold = .8) |>
step_dummy(all_nominal_predictors())
prepped_recipe = prep(bike_recipe)
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=factor(ifelse(4,3,weather)),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_rm(datetime) |>
step_corr(all_predictors(), threshold = .8) |>
step_dummy(all_nominal_predictors())
prepped_recipe = prep(bike_recipe)
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=factor(ifelse(4,3,weather)),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_rm(datetime) |>
step_corr(all_double_predictors(), threshold = .8) |>
step_dummy(all_nominal_predictors())
prepped_recipe = prep(bike_recipe)
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=factor(ifelse(4,3,weather)),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_rm(datetime) |>
step_corr(all_double_predictors(), threshold = .8) |>
step_dummy(all_nominal_predictors())
prepped_recipe = prep(bike_recipe)
print(bike_recipe)
rlang::last_trace()
juice(prepped_recipe)
prepped_recipe = prep(bike_recipe)
mean(bike_train$holiday == 0)
sum(bike_train$holiday == 0)
sum(bike_train$holiday == 1)
?all_nominal_predictors
unique(bike_train$datetime)
unique(bike_train$season)
unique(bike_train$workingday)
unique(bike_train$holiday)
unique(bike_train$weather)
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_rm(datetime) |>
step_corr(all_double_predictors(), threshold = .8) |>
step_dummy(all_nominal_predictors())
prepped_recipe = prep(bike_recipe)
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_rm(datetime) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .8) |>
step_dummy(all_nominal_predictors())
prepped_recipe = prep(bike_recipe)
bake(prepped_recipe, new_data=bike_test)
bike_lm <- linear_reg() |>
set_engine("lm") |>
set_mode("regression")
bike_workflow <- workflow() |>
add_recipe(bike_recipe) |>
add_model(bike_lm) |>
fit(data=bike_train)
lin_preds <- predict(bike_workflow, new_data=bike_test)
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_rm(datetime) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .8) |>
step_dummy(all_nominal_predictors())
bike_lm <- linear_reg() |>
set_engine("lm") |>
set_mode("regression")
bike_workflow <- workflow() |>
add_recipe(bike_recipe) |>
add_model(bike_lm) |>
fit(data=bike_train)
lin_preds <- predict(bike_workflow, new_data=bike_test)
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_rm(datetime) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .6) |>
step_dummy(all_nominal_predictors())
bike_lm <- linear_reg() |>
set_engine("lm") |>
set_mode("regression")
bike_workflow <- workflow() |>
add_recipe(bike_recipe) |>
add_model(bike_lm) |>
fit(data=bike_train)
lin_preds <- predict(bike_workflow, new_data=bike_test)
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
#step_rm(datetime) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .6) |>
step_dummy(all_nominal_predictors())
bike_lm <- linear_reg() |>
set_engine("lm") |>
set_mode("regression")
bike_workflow <- workflow() |>
add_recipe(bike_recipe) |>
add_model(bike_lm) |>
fit(data=bike_train)
lin_preds <- predict(bike_workflow, new_data=bike_test)
head(lin_preds)
kaggle_submission <- lin_predictions |>
bind_cols(bike_test) |>
select(datetime, .pred) |>
rename(count=.pred) |>
mutate(count=pmax(0, count)) |>
mutate(datetime=as.character(format(datetime)))
kaggle_submission <- lin_preds |>
bind_cols(bike_test) |>
select(datetime, .pred) |>
rename(count=.pred) |>
mutate(count=pmax(0, count)) |>
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./Linear_WF_Preds.csv", delim = ",")
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .6) |>
step_dummy(all_nominal_predictors())
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .7) |>
step_dummy(all_nominal_predictors())
bike_lm <- linear_reg() |>
set_engine("lm") |>
set_mode("regression")
bike_workflow <- workflow() |>
add_recipe(bike_recipe) |>
add_model(bike_lm) |>
fit(data=bike_train)
lin_preds <- predict(bike_workflow, new_data=bike_test)
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
count=log(count),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .7) |>
step_dummy(all_nominal_predictors())
bike_lm <- linear_reg() |>
set_engine("lm") |>
set_mode("regression")
bike_workflow <- workflow() |>
add_recipe(bike_recipe) |>
add_model(bike_lm) |>
fit(data=bike_train)
lin_preds <- predict(bike_workflow, new_data=bike_test)
bike_recipe <- recipe(log(count)~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .7) |>
step_dummy(all_nominal_predictors())
bike_lm <- linear_reg() |>
set_engine("lm") |>
set_mode("regression")
bike_train <- bike_train  |>
select(-casual, -registered) |>
mutate(count=log(count))
bike_train <- vroom("train.csv")
bike_train <- bike_train  |>
select(-casual, -registered) |>
mutate(count=log(count))
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .7) |>
step_dummy(all_nominal_predictors())
bike_lm <- linear_reg() |>
set_engine("lm") |>
set_mode("regression")
bike_workflow <- workflow() |>
add_recipe(bike_recipe) |>
add_model(bike_lm) |>
fit(data=bike_train)
lin_preds <- predict(bike_workflow, new_data=bike_test)
kaggle_submission <- lin_preds |>
bind_cols(bike_test) |>
select(datetime, .pred) |>
rename(count=.pred) |>
mutate(count=pmax(0, count)) |>
mutate(datetime=as.character(format(datetime)),
count=exp(count))
vroom_write(x=kaggle_submission, file="./Linear_WF_Preds.csv", delim = ",")
juice(prepped_recipe)
print(n=10'')
print(n=10)
print(juice(prepped_recipe), n=10)
print(juice(prepped_recipe), n=15)
colnames(juice(prepped_recipe))
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .7) |>
step_rm(humidity, windspeed) |>
step_dummy(all_nominal_predictors())
bike_lm <- linear_reg() |>
set_engine("lm") |>
set_mode("regression")
bike_workflow <- workflow() |>
add_recipe(bike_recipe) |>
add_model(bike_lm) |>
fit(data=bike_train)
lin_preds <- predict(bike_workflow, new_data=bike_test)
kaggle_submission <- lin_preds |>
bind_cols(bike_test) |>
select(datetime, .pred) |>
rename(count=.pred) |>
mutate(count=pmax(0, count)) |>
mutate(datetime=as.character(format(datetime)),
count=exp(count))
vroom_write(x=kaggle_submission, file="./Linear_WF_Preds2.csv", delim = ",")
juice(prepped_recipe)
colname(juice(prepped_recipe))
colnames(juice(prepped_recipe))
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_zv(all_predictors()) |>
step_rm(windspeed) |>
step_corr(all_double_predictors(), threshold = .7) |>
step_dummy(all_nominal_predictors())
bike_lm <- linear_reg() |>
set_engine("lm") |>
set_mode("regression")
bike_workflow <- workflow() |>
add_recipe(bike_recipe) |>
add_model(bike_lm) |>
fit(data=bike_train)
lin_preds <- predict(bike_workflow, new_data=bike_test)
juice(prepped_recipe)
colnames(juice(prepped_recipe))
prepped_recipe = prep(bike_recipe)
colnames(juice(prepped_recipe))
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_zv(all_predictors()) |>
step_rm(windspeed, atemp) |>
step_corr(all_double_predictors(), threshold = .7) |>
step_dummy(all_nominal_predictors())
prepped_recipe = prep(bike_recipe)
colnames(juice(prepped_recipe))
length(colnames(juice(prepped_recipe)))
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .5) |>
step_dummy(all_nominal_predictors())
prepped_recipe = prep(bike_recipe)
colnames(juice(prepped_recipe))
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .5) |>
step_dummy(all_nominal_predictors()) |>
step_zv(all_predictors())
prepped_recipe = prep(bike_recipe)
colnames(juice(prepped_recipe))
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_rm(humidity, windspeed) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .5) |>
step_dummy(all_nominal_predictors()) |>
step_zv(all_predictors())
prepped_recipe = prep(bike_recipe)
colnames(juice(prepped_recipe))
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour")) |>
step_rm(humidity, windspeed) |>
step_zv(all_predictors()) |>
step_corr(all_double_predictors(), threshold = .5) |>
step_dummy(all_nominal_predictors())
prepped_recipe = prep(bike_recipe)
colnames(juice(prepped_recipe))
bike_recipe <- recipe(count~., data = bike_train) |>
step_mutate(
season=factor(season,
levels = 1:4,
labels = c("Spring", "Summer", "Fall", "Winter")),
weather=as.factor(ifelse(4,3,weather)),
holiday=as.factor(holiday),
workingday=as.factor(workingday),
datetime=as.POSIXct(datetime,
format = "%Y-%m-%d %H:%M:%S")) |>
step_date(datetime, features = c("year", "month", "dow")) |>
step_time(datetime, features = c("hour"))
prepped_recipe = prep(bike_recipe)
colnames(juice(prepp))
colnames(juice(prepped_recipe))
